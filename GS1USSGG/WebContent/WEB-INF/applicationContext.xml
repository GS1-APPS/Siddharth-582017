<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
      
      xsi:schemaLocation="http://www.springframework.org/schema/beans
        classpath:org/springframework/beans/factory/xml/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       >

  <!-- the application context definition for the DispatcherServlet -->

	<context:component-scan base-package="org.gs1us.sgg.webapp" />
	<context:component-scan base-package="org.gs1us.sgg.webapi" />
	<context:component-scan base-package="org.gs1us.sgg.app" />

	
	<!--  The following is boilerplate to get Spring transactions and Spring/JPA/Hibernate persistence working -->
		<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:persistence.xml" />
		<property name="persistenceUnitName" value="gs1ussggPersistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="jpaProperties">
         <props>
            <prop key="hibernate.id.new_generator_mappings">true</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
            <prop key="hibernate.show_sql">false</prop>
            <prop key="hibernate.ejb.naming_strategy">org.gs1us.sgg.daoutil.jpa.HibernateNamingStrategy</prop>
         </props>
      </property>		
	</bean>

		<!--  GS1USSGL Entity Factory -->
		<bean id="gs1ussglEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="persistenceXmlLocation" value="classpath:persistence.xml" />
			<property name="persistenceUnitName" value="gs1ussglPersistenceUnit" />
			<property name="dataSource" ref="gs1ussglDataSource" />
			<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
			<property name="jpaDialect" ref="jpaDialect" />
			<property name="jpaProperties">
	         <props>
	            <prop key="hibernate.id.new_generator_mappings">true</prop>
	            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
	            <prop key="hibernate.show_sql">false</prop>
	            <prop key="hibernate.ejb.naming_strategy">org.gs1us.sgg.daoutil.jpa.HibernateNamingStrategy</prop>
	         </props>
	      </property>		
		</bean>


	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<!-- <property name="database" value="PostgreSQL" /> -->
		<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL9Dialect" />
	</bean>

	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<!--   SGG transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>

	<!--   GS1USSGL transactionManager -->
	<bean id="gs1ussglTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="gs1ussglEntityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Set up driver for persistence -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="org.postgresql.Driver"/>
    	<property name="url" value="jdbc:postgresql://54.227.212.245/sgg"/>
    	<property name="username" value="postgres"/>
    	<property name="password" value="rescuegs1!!"/>
	</bean>

	<!-- GS1USSGL Datasource -->
	<bean id="gs1ussglDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="org.postgresql.Driver"/>
    	<property name="url" value="jdbc:postgresql://107.22.7.19/gs1ussgl"/>
    	<property name="username" value="postgres"/>
    	<property name="password" value="rescuegs1!!"/>
	</bean>

	
	<!-- Global Broker -->
	<bean id="accountManager" class="org.gs1us.sgg.account.AccountManager" />
	<bean id="appManager" class="org.gs1us.sgg.app.AppManager" />
	<bean id="commerceManager" class="org.gs1us.sgg.commerce.CommerceManager" />
	<bean id="gbDao" class="org.gs1us.sgg.dao.jpa.JpaGBDao" />
	<bean id="nextIdDao" class="org.gs1us.sgg.dao.jpa.JpaNextIdDao" />
	<bean id="productManager" class="org.gs1us.sgg.product.ProductManager" />
	<bean id="productOpsManager" class="org.gs1us.sgg.gbservice.impl.ProductOpsManager" />
	<bean id="importManager" class="org.gs1us.sgg.gbservice.impl.ImportManager" />
	  
	<security:authentication-manager>
	  <security:authentication-provider ref="daoAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDao"/>
		<property name="passwordEncoder" ref="passwordEncoder"/>		
	</bean>

	<!-- Standalone User -->
	<bean id="userDao" class="org.gs1us.sgg.dao.memberservice.standalone.jpa.JpaStandaloneUserDao" />
	<bean id="memberDao" class="org.gs1us.sgg.dao.memberservice.standalone.jpa.JpaStandaloneMemberDao" />	

	 
	 <!-- 
	<bean id="userDao" class="org.gs1us.sgl.memberservice.standalone.jpa.JpaStandaloneUserDao" />
	<bean id="memberDao" class="org.gs1us.sgl.memberservice.standalone.jpa.JpaStandaloneMemberDao" />
	 -->
	<!-- 
	<bean id="gbService" class="org.gs1us.sgl.gbservice.mock.MockGlobalBrokerService" />
	 -->
	<bean id="gbService" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceBridge" />
	<!-- 
	<bean id="billingService" class="org.gs1us.sgl.billingservice.mock.MockBillingService" />
	 -->
	<bean id="clockService" class="org.gs1us.sgg.clockservice.ClockService" />
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<bean id="templateEmail" class="org.springframework.mail.SimpleMailMessage">
		<!--  Depending on the email, either from or to will be changed to something else -->
	    <property name="from" value="kt@kentraub.com" />
	    <property name="to" value="kt@kentraub.com" />
	</bean>
		
	<!-- 
	<bean id="termsOfService" class="org.gs1us.sgl.serviceterms.TermsOfService">
		<property name="version" value="1.0" />
		<property name="url" value="/static/GS1USSmartGtinTermsofService1.0-28MAY2015.pdf" />
	</bean>
	 -->
	<bean id="httpTransport" class="org.gs1us.sgg.transport.JavaHttpTransport" />
	
		
	<bean id="versionOracle" class="org.gs1us.sgg.util.VersionOracle">
	    	<constructor-arg index="0" value="/sgg-version.text"/>
	</bean>
	
	<bean id="testManager" class="org.gs1us.sgg.gbservice.test.TestManager" />
 
	<mvc:annotation-driven>
		<mvc:path-matching suffix-pattern="false" />
		<mvc:message-converters>
		    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            	<property name="objectMapper" ref="objectMapper"/>
        	</bean>
        </mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler /> 
	
	<bean id="objectMapper" class="org.gs1us.sgg.gbservice.json.ObjectMapperFactoryBean" />
	
	<!-- prod profile is production -->
	<beans profile="prod">
		<security:http>
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('ACCOUNT','ADMIN')" />
			<security:intercept-url pattern="/api/order*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="denyAll()" />
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>
 		
 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="basic"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/basic"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
			<property name="defaultExperienceUrlHost" value="dwbroker.gs1us.org" />
		</bean>
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    		<property name="host" value="192.168.12.65 "/>
		</bean>
		<!-- 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DummyDigimarcClient" />
		 -->

		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://api.digimarc.net" />
			<constructor-arg index="1" value="integrator-gs1@gs1.org" />
			<constructor-arg index="2" value="4o4WxQm2wry2lLYbG4tEwSG1kD0vzDVG" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>

		<bean id="userDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1us:3RdL5gHIPPfbOhdlw-Oq8BARTh-5Rx7YUiwZtrm6CLU:ADMIN</value>
				<value>digimarc:AJTN00cid4eul3-2Ttby3JoGw_vBPH7xZGWli9V0YNg:PRODUCT</value>			
			</list></constructor-arg>
		</bean>
	</beans>
	
	<!-- qa profile is qa servers  -->
	<beans profile="qa">
		<security:http>
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('ACCOUNT','ADMIN')" />
			<security:intercept-url pattern="/api/order*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="denyAll()" />
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>

 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="basic"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/basic"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
			<property name="defaultExperienceUrlHost" value="dwbroker.qa.gs1us.org" />
		</bean>
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    		<property name="host" value="192.168.12.65"/>
		</bean>
		<!-- 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DummyDigimarcClient" />
		 -->
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://labs-api.digimarc.net" />
			<constructor-arg index="1" value="integrator-gs1@gs1.org" />
			<constructor-arg index="2" value="7dyF9Ofq3Q6CasADTWB4XrSPoytMdPhU" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>
		<bean id="userDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1us:hobJLFJtxc7JDxTi-T8O8fe-N6z9p95BA0TmW9e_zwk:ADMIN</value>
				<value>digimarc:d2EYI81GLMCDsr8aI43BCnd0kWycuKN-r3r9s95xwls:PRODUCT</value>			
			</list></constructor-arg>
		</bean>
	</beans>
	
	<!-- test1 profile is first set of test servers -->
	<beans profile="test1">
		<security:http>
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('ACCOUNT','ADMIN')" />
			<security:intercept-url pattern="/api/order*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="hasAnyRole('PRODUCT','ADMIN')" /> <!-- Enable non-production only!! -->
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>

 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="basic"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/basic"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
			<property name="defaultExperienceUrlHost" value="52.3.147.85" />
		</bean>
	 	<bean id="mailSender" class="org.gs1us.sgg.mail.MockMailSender" />

		<!-- 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DummyDigimarcClient" />
		 -->
		 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://test-api.digimarc.net" />
			<constructor-arg index="1" value="integrator-gs1@gs1.org" />
			<constructor-arg index="2" value="a02UppWH4g2OAtIgoYHb3s6Zc32Ukk/s" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>
		
		<bean id="userDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1us:MTKOyEmsZrDR6PM0_NIhj5zdKHeYwiOQBhAZyFR-wjo:ADMIN</value>
				<value>digimarc:265SS17FHbZV6uqz18Lf7kwW6mzQDZ4A1X1iI94mGiU:PRODUCT</value>			
			</list></constructor-arg>
		</bean>
	</beans>
	
	<!-- test2 profile is second set of test servers -->
	<beans profile="test2">
		<security:http>
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('ACCOUNT','ADMIN')" />
			<security:intercept-url pattern="/api/order*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="hasAnyRole('PRODUCT','ADMIN')" /> <!-- Enable non-production only!! -->
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>

 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="basic"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/basic"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
			<property name="defaultExperienceUrlHost" value="52.70.229.92" />
		</bean>
	 	<bean id="mailSender" class="org.gs1us.sgg.mail.MockMailSender" />
	 	<!-- 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DummyDigimarcClient" />
		 -->
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://dev-api.digimarc.net" />
			<constructor-arg index="1" value="integrator-gs1@gs1.org" />
			<constructor-arg index="2" value="a02UppWH4g2OAtIgoYHb3s6Zc32Ukk/s" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>
		<bean id="userDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1us:MTKOyEmsZrDR6PM0_NIhj5zdKHeYwiOQBhAZyFR-wjo:ADMIN</value>
				<value>digimarc:265SS17FHbZV6uqz18Lf7kwW6mzQDZ4A1X1iI94mGiU:PRODUCT</value>			
			</list></constructor-arg>
		</bean>
	</beans>
	
	<!-- gtinregistry profile is for Mike Wehrs -->
	<beans profile="gtinregistry">
		<security:http create-session="stateless" use-expressions="true">
		   <!-- security:anonymous enabled="true" -->		   
			<security:intercept-url pattern="/api/search/**" access="permitAll"/>
			<!-- security:intercept-url pattern="/api/search/**" access="isAuthenticated() -->
			<!-- security:intercept-url pattern="/api/search/**" access="isAnonymous() -->
		
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('USER','PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('USER','ACCOUNT','ADMIN')" />		
			<security:intercept-url pattern="/api/order*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="hasAnyRole('USER','BILLING','ADMIN')" /> <!-- Enable non-production only!! -->
			
			<security:intercept-url pattern="/api/import*/**" access="hasAnyRole('USER','ADMIN')" />
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>

 		<!-- Hack to enable the demo features -->
 		<bean id="demoController" class="org.gs1us.sgg.webapp.DemoController">
 			<property name="enabled" value="true" />
 		</bean>

 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="cp"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/cp"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
               <!-- Original Value: 52.55.25.90 -->
            <property name="defaultExperienceUrlHost" value="107.22.7.19" />
		</bean>
	 	<bean id="mailSender" class="org.gs1us.sgg.mail.MockMailSender" />
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.MockDigimarcClient" />
		<!-- 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://dev-api.digimarc.net" />
			<constructor-arg index="1" value="integrator-gs1@gs1.org" />
			<constructor-arg index="2" value="a02UppWH4g2OAtIgoYHb3s6Zc32Ukk/s" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>
		 -->
		<bean id="mockUserDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1:k0rbQPY9yADMnxUAmpA4kOnNaTHy8Ps5wuevV2GKsvU:ADMIN</value>
			</list></constructor-arg>
		</bean>
	</beans>
	
	
	<!-- Dev profile is on KT's development machine -->
	<beans profile="dev">
		<security:http create-session="stateless" use-expressions="true">
		   <!-- security:anonymous enabled="true" -->		   
			<security:intercept-url pattern="/api/search/**" access="permitAll"/>
			<!-- security:intercept-url pattern="/api/search/**" access="isAuthenticated() -->
			<!-- security:intercept-url pattern="/api/search/**" access="isAnonymous() -->
		
			<security:intercept-url pattern="/api/product*/**" access="hasAnyRole('USER','PRODUCT','ADMIN')" />
			<security:intercept-url pattern="/api/account*/**" access="hasAnyRole('USER','ACCOUNT','ADMIN')" />		
			<security:intercept-url pattern="/api/order*/**"   access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/invoice*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/payment*/**" access="hasAnyRole('BILLING','ADMIN')" />
			<security:intercept-url pattern="/api/nonprod*/**" access="hasAnyRole('USER','BILLING','ADMIN')" /> <!-- Enable non-production only!! -->
			<security:intercept-url pattern="/api/import*/**" access="hasAnyRole('USER','ADMIN')" />
			<security:intercept-url pattern="/api/**" access="hasRole('ADMIN')" />

			<!-- <security:intercept-url pattern="/**" requires-channel="https" />  -->

	 		<security:http-basic />
	 		<security:csrf disabled="true"/>
 		</security:http>
 		
 		<!-- Hack to enable the demo features -->
 
 		<bean id="demoController" class="org.gs1us.sgg.webapp.DemoController">
 			<property name="enabled" value="true" />
 		</bean>

		 
 		<bean id="gbServiceImpl" class="org.gs1us.sgg.gbservice.impl.GlobalBrokerServiceImpl">
 			<constructor-arg index="0" value="cp"/>
 		</bean> 		

 		<bean id="productInfoControllerOptions" class="org.gs1us.sgg.webapp.ProductInfoController.Options">
 			<constructor-arg index="0" value="/WEB-INF/jsp/productinfo/cp"/>
 		</bean> 		

		<bean id="digimarcOptions" class="org.gs1us.sgg.app.dwcode.DigimarcOptions">
			<property name="defaultExperienceUrlHost" value="localhost" />
			<property name="defaultExperienceUrlPort" value="7070" />
		</bean>
	 	<bean id="mailSender" class="org.gs1us.sgg.mail.MockMailSender" />

		 
		<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.MockDigimarcClient" />
		
		<!-- 
	 	<bean id="digimarcService" class="org.gs1us.sgg.app.dwcode.DigimarcClient">
  			<constructor-arg index="0" value="https://labs-api.digimarc.net" />
			<constructor-arg index="1" value="integrator2-gs1@gs1.org" />
			<constructor-arg index="2" value="5YaQIJKJRnF9kfMJ/erX0m1jv7gq/t8n" />
			<constructor-arg index="3" ref="httpTransport" />
		</bean>
		 -->		 			
			 
		<bean id="mockUserDao" class="org.gs1us.sgg.temp.MockUserDao">
			<constructor-arg index="0"><list>
				<value>gs1us:MTKOyEmsZrDR6PM0_NIhj5zdKHeYwiOQBhAZyFR-wjo:ADMIN</value>
				<value>digimarc:265SS17FHbZV6uqz18Lf7kwW6mzQDZ4A1X1iI94mGiU:PRODUCT</value>			
			</list></constructor-arg>
		</bean>
	</beans>
</beans>
